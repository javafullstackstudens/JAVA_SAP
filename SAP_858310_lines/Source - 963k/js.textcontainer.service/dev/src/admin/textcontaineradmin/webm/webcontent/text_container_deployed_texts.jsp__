 package PackageNo1111148742;import com.sap.engine.services.textcontainer.admin.AdministrationTool;import com.sap.engine.services.textcontainer.admin.dbaccess.ContainerData; public class text_container_deployed_texts_jsp {  /* 1 */ 	public String getDeepMessage(Exception e) /* 5 */ 	{ /* 6 */ 		String msg = "Exception:"; /* 7 */ 		Throwable t = e; /* 8 */ 		while (t != null) /* 9 */ 		{ /* 10 */ 			msg += "<br>" + t.toString(); /* 11 */ 			t = t.getCause(); /* 12 */ 		} /* 13 */ 		return msg; /* 14 */ 	} /* 15 */  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();















     
     	String err = "";
     
     	String deployed_component = null;
     	String original_component = null;
     	String bundle = null;
     
     	String deployed_component_name = "";
     	String original_component_name = "";
     	String bundle_name = "";
     
     	try
     	{
     		AdministrationTool.checkLogin(request, response);
     		AdministrationTool.checkAdministrationPermission(request, response);
     
     		deployed_component = request.getParameter("deployed_component");
     		original_component = request.getParameter("original_component");
     		bundle = request.getParameter("bundle");
     	}
     	catch (Exception e)
     	{
     		err = getDeepMessage(e);
     	}
     
      try { 











     
     	if (err.length() == 0)
     	{
     		try
     		{
     			int lines = 0;
     
     			ContainerData[] texts = AdministrationTool.getDeployedTexts(deployed_component, original_component, bundle);
     
     			if ((deployed_component != null) && (deployed_component.length() > 0))
     			{
     				deployed_component_name = AdministrationTool.getComponentName(deployed_component);
     
response.write(deployed_component_name );
     
     			}
     
     			if ((original_component != null) && (original_component.length() > 0))
     			{
     				original_component_name = AdministrationTool.getComponentName(original_component);
     
response.write(original_component_name );
     
     			}
     
     			if ((bundle != null) && (bundle.length() > 0))
     			{
     				AdministrationTool.getBundleName(original_component, bundle);
     
    response.write(bundle_name );
     
     			}
     
     			if (texts != null)
     			{
     














     
     				for (int i = 0; i < texts.length; i++)
     				{
     					ContainerData text = texts[i];
     					String deployedComponentHashString = AdministrationTool.ByteArrayToString(text.getDeployComponentHash());
     					String originalComponentHashString = AdministrationTool.ByteArrayToString(text.getOriginalComponentHash());
     					String bundleHashString = AdministrationTool.ByteArrayToString(text.getBundleHash());
     					String deployedComponentName = deployed_component_name;
     					if ((deployedComponentName.length() == 0))
     					{
     						deployedComponentName = AdministrationTool.getComponentName(AdministrationTool.ByteArrayToString(text.getDeployComponentHash()));
     					}
     					String originalComponentName = original_component_name;
     					if ((originalComponentName.length() == 0))
     					{
     						originalComponentName = AdministrationTool.getComponentName(AdministrationTool.ByteArrayToString(text.getOriginalComponentHash()));
     					}
     					String bundleName = bundle_name;
     					if ((bundleName.length() == 0))
     					{
     						bundleName = AdministrationTool.getBundleName(AdministrationTool.ByteArrayToString(text.getOriginalComponentHash()), AdministrationTool.ByteArrayToString(text.getBundleHash()));
     					}
     

response.write(deployedComponentName );
response.write(text.getSequenceNumber() );
response.write(originalComponentName );
response.write(bundleName );
response.write(text.getContextId() );
response.write(text.getTextKey() );
response.write(text.getText() );

response.write(deployedComponentHashString );
response.write(originalComponentHashString );
response.write(bundleHashString );

     
     					lines++;
     				}
     


     
     			}
     
  response.write(lines )+response.write(request.getAttribute("lines "));
     
     		}
     		catch (Exception e)
     		{
     			err = getDeepMessage(e);
     		}
     		finally
     		{
     			AdministrationTool.closeConnection();
     		}
     	}
     
     
     	if (err.length() > 0)
     	{
     


     response.write( err );

     
     	}
     
















      } catch (Exception e) { 
       response.write( getDeepMessage(e) )+response.write(request.getAttribute(" getDeepMessage(e) "));
      } 
}

}
