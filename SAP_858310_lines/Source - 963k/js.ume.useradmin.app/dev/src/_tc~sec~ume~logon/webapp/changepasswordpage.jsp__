 package PackageNo2034841668;import logon_proxy_txt;import _umLogonTopArea_txt;import _umLogonBotArea_txt;import com.sap.security.core.sapmimp.logon.*;import com.sap.security.api.UMFactory;import com.sap.security.core.sapmimp.rendering.Browsers;import com.sap.security.core.util.taglib.EncodeHtmlTag;import com.sap.security.api.logon.ILoginConstants;import com.sap.security.core.util.*; public class changepasswordpage_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();







      SAPMLogonLogic.setUnicodeEnabled(proxy); 


  LogonLocaleBean logonLocale = new LogonLocaleBean();
   LogonMessageBean logonMessage = new LogonMessageBean();
LogonBean logonBean = new LogonBean();
    ErrorBean error = new ErrorBean();

     if( !inPortal ) { 




      } 
   response.write(webpath)+response.write(request.getAttribute("webpath"));













       response.write(ILoginConstants.NEW_PASSWORD)+response.write(request.getAttribute("ILoginConstants").NEW_PASSWORD);
       response.write(ILoginConstants.CONFIRM_PASSWORD)+response.write(request.getAttribute("ILoginConstants").CONFIRM_PASSWORD);


     if( !inPortal ) { 

      } 



response.write(inPortal?proxy.getAlias(SAPMLogonLogic.performChangePasswordAction):"sap_j_security_check" );
       if( inPortal ) { 


if (UMFactory.getProperties().getBoolean ("ume.login.do_redirect", true)==true) { 

} 
       } 


  if ( error.getLocalizedMessage() != null ) { 






 response.write(webpath)+response.write(request.getAttribute("webpath"));
  response.write(EncodeHtmlTag.encode(error.getLocalizedMessage()))+response.write(request.getAttribute("EncodeHtmlTag").encode(error.getLocalizedMessage()));






  } else if ( error.getMessage() != null ) { 






 response.write(webpath)+response.write(request.getAttribute("webpath"));
  response.write(EncodeHtmlTag.encode(logonMessage.print(error.getMessage())))+response.write(request.getAttribute("EncodeHtmlTag").encode(logonMessage.print(error.getMessage())));






  } else { 




  } 



      response.write(logonLocale.get("CHANGE_PASSWORD"));






    response.write(logonLocale.get("OLD_PASSWORD"));



   response.write(ILoginConstants.getOLD_PASSWORD())+response.write(request.getAttribute("ILoginConstants").getOLD_PASSWORD());






    response.write(logonLocale.get("NEW_PASSWORD"));



   response.write(ILoginConstants.getNEW_PASSWORD())+response.write(request.getAttribute("ILoginConstants").getNEW_PASSWORD());






    response.write(logonLocale.get("CONFIRM_NEW_PASSWORD"));



   response.write(ILoginConstants.getCONFIRM_PASSWORD())+response.write(request.getAttribute("ILoginConstants").getCONFIRM_PASSWORD());




       if (inPortal) {
     		String reqscheme = proxy.getRequiredAuthScheme();
     		
     		if (reqscheme != null) {
     			
       response.write(ILoginConstants.getLOGON_AUTHSCHEME_ALIAS())+response.write(request.getAttribute("ILoginConstants").getLOGON_AUTHSCHEME_ALIAS());response.write(EncodeHtmlTag.getEncode(reqscheme))+response.write(request.getAttribute("EncodeHtmlTag").getEncode(reqscheme));

     		}
     	  }
     	








 response.write(SAPMLogonLogic.performChangePasswordAction)+response.write(request.getAttribute("SAPMLogonLogic").performChangePasswordAction);response.write(logonLocale.get("CHANGE"));
      if (inPortal) { 
 response.write(SAPMLogonLogic.showUidPasswordLogonPage)+response.write(request.getAttribute("SAPMLogonLogic").showUidPasswordLogonPage);response.write(logonLocale.get("CANCEL"));
      } else { 
 response.write(SAPMLogonLogic.showUidPasswordLogonPage)+response.write(request.getAttribute("SAPMLogonLogic").showUidPasswordLogonPage);response.write(logonLocale.get("CANCEL"));
      } 







      if(!inPortal) proxy.sessionInvalidate(); 
     if(inPortal) { 

      } else { 


      } 
}

}
