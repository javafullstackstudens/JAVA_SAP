 package PackageNo1257391633; public class guestuserprofile_additionalinfo_change_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();








      String addInfo = userAdminLocale.get("ADDITIONAL_INFO");
if ( entryExit.length() > 0 ) entryExit.delete(0, entryExit.length());		   
entryExit.append(userAdminMessages.print(new Message("START_GROUP_BOX", addInfo))); 
   response.write(webpath)+response.write(request.getAttribute("webpath"));


   response.write(entryExit.getToString())+response.write(request.getAttribute("entryExit").getToString());

   response.write(addInfo);




   response.write(addInfo);



       response.write(webpath)+response.write(request.getAttribute("webpath"));



       response.write(altmin)+response.write(request.getAttribute("altmin"));
       response.write(altmin)+response.write(request.getAttribute("altmin"));response.write(altmax)+response.write(request.getAttribute("altmax"));response.write(webpath)+response.write(request.getAttribute("webpath"));






     response.write(webpath)+response.write(request.getAttribute("webpath"));

      if(null!=self)
    _readOnly = UserAdminFactory.isAttributeReadOnly(self.getUniqueID(), UserBean.positionId);
else
    _readOnly = false; 

if ( _readOnly) { 
if ( spanTitle.length() > 0 ) spanTitle.delete(0, spanTitle.length());
  spanTitle.append(userAdminLocale.get("POSITION")).append(" ");
  spanTitle.append(user.getPosition()).append(" ");
  spanTitle.append(userAdminLocale.get("NOT_AVAILABLE")); 
     response.write(spanTitle.getToString())+response.write(request.getAttribute("spanTitle").getToString());response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());response.write(userAdminLocale.get("POSITION"));
} else {  
     response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());response.write(userAdminLocale.get("POSITION"));
} 


       response.write(user.positionId)+response.write(request.getAttribute("user").positionId);
 response.write(user.positionId)+response.write(request.getAttribute("user").positionId);

  response.write(user.getPosition())+response.write(request.getAttribute("user").getPosition());



       if ( _readOnly ) {     }
if ( _readOnly) { response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());response.write(user.getPosition())+response.write(request.getAttribute("user").getPosition()); } 




      if(null!=self)
    _readOnly = UserAdminFactory.isAttributeReadOnly(self.getUniqueID(), UserBean.departmentId);
else
    _readOnly = false; 

if ( _readOnly) { 
if ( spanTitle.length() > 0 ) spanTitle.delete(0, spanTitle.length());
  spanTitle.append(userAdminLocale.get("DEPARTMENT")).append(" ");
  spanTitle.append(user.getDepartment()).append(" ");
  spanTitle.append(userAdminLocale.get("NOT_AVAILABLE")); 
     response.write(spanTitle.getToString())+response.write(request.getAttribute("spanTitle").getToString());response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());response.write(userAdminLocale.get("DEPARTMENT"));
} else {  
     response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());response.write(userAdminLocale.get("DEPARTMENT"));
} 


       response.write(user.departmentId)+response.write(request.getAttribute("user").departmentId);

 response.write(user.departmentId)+response.write(request.getAttribute("user").departmentId);
  response.write(user.getDepartment())+response.write(request.getAttribute("user").getDepartment());



       if ( _readOnly ) {     }
if ( _readOnly) { response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());response.write(user.getDepartment())+response.write(request.getAttribute("user").getDepartment()); } 



      if(null!=self)
    _readOnly = UserAdminFactory.isAttributeReadOnly(self.getUniqueID(), UserBean.noteToAdmin);
else
    _readOnly = false; 

if ( _readOnly) { 
if ( spanTitle.length() > 0 ) spanTitle.delete(0, spanTitle.length());
  spanTitle.append(userAdminLocale.get("NOTE_TO_ADMIN")).append(" ");
  spanTitle.append(user.getNoteToAdmin()).append(" ");
  spanTitle.append(userAdminLocale.get("NOT_AVAILABLE")); 
     response.write(spanTitle.getToString())+response.write(request.getAttribute("spanTitle").getToString());response.write(user.getNoteToAdmin())+response.write(request.getAttribute("user").getNoteToAdmin());response.write(userAdminLocale.get("NOTE_TO_ADMIN"));
} else {  
     response.write(user.getNoteToAdmin())+response.write(request.getAttribute("user").getNoteToAdmin());response.write(userAdminLocale.get("NOTE_TO_ADMIN"));
} 


  String noteToAdmin = user.getNoteToAdmin();
     		     if ( null == noteToAdmin ) noteToAdmin = ""; 
       response.write(user.getNoteToAdmin())+response.write(request.getAttribute("user").getNoteToAdmin());
       response.write(user.getNoteToAdmin())+response.write(request.getAttribute("user").getNoteToAdmin());

       response.write(noteToAdmin)+response.write(request.getAttribute("noteToAdmin"));



   response.write(noteToAdmin)+response.write(request.getAttribute("noteToAdmin"));




     response.write(webpath)+response.write(request.getAttribute("webpath"));





      entryExit.delete(0, entryExit.length());
entryExit.append(userAdminMessages.print(new Message("END_GROUP_BOX", addInfo))); 
   response.write(webpath)+response.write(request.getAttribute("webpath"));


   response.write(addInfo);
   response.write(entryExit.getToString())+response.write(request.getAttribute("entryExit").getToString());
}

}
