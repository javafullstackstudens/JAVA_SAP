 package PackageNo942093249; public class userprofile_addtionalinfo_create_withorgunit_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();








      String orgUnitName = (String) proxy.getRequestAttribute(UserAdminLogic.orgUnitName);
if ( null == orgUnitName ) {
    orgUnitName = new String();
}
     





       response.write(UserAdminLogic.searchOrgUnitAction)+response.write(request.getAttribute("UserAdminLogic").searchOrgUnitAction);




response.write(UserAdminLogic.preRequest)+response.write(request.getAttribute("UserAdminLogic").preRequest);

 response.write(util.filteringSpecialChar(action))+response.write(request.getAttribute("util").filteringSpecialChar(action));





      String addInfo = userAdminLocale.get("ADDITIONAL_INFO");
if ( entryExit.length() > 0 ) entryExit.delete(0, entryExit.length());		   
entryExit.append(userAdminMessages.print(new Message("START_GROUP_BOX", addInfo))); 
   response.write(webpath)+response.write(request.getAttribute("webpath"));


   response.write(entryExit.getToString())+response.write(request.getAttribute("entryExit").getToString());

   response.write(addInfo);




   response.write(addInfo);



       response.write(webpath)+response.write(request.getAttribute("webpath"));



       response.write(altmin)+response.write(request.getAttribute("altmin"));
       response.write(altmin)+response.write(request.getAttribute("altmin"));response.write(altmax)+response.write(request.getAttribute("altmax"));response.write(webpath)+response.write(request.getAttribute("webpath"));






     response.write(webpath)+response.write(request.getAttribute("webpath"));


       response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());response.write(userAdminLocale.get("POSITION"));

     response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());
     response.write(user.getPositionId())+response.write(request.getAttribute("user").getPositionId());

     response.write(user.getPosition())+response.write(request.getAttribute("user").getPosition());





   response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());response.write(userAdminLocale.get("DEPARTMENT"));

     response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());
     response.write(user.getDepartmentId())+response.write(request.getAttribute("user").getDepartmentId());

     response.write(user.getDepartment())+response.write(request.getAttribute("user").getDepartment());






if ( spanTitle.length() > 0 ) spanTitle.delete(0, spanTitle.length());
  spanTitle.append(UserAdminLogic.orgUnitName).append(" ");
  spanTitle.append(orgUnitName).append(" ");
  spanTitle.append(userAdminLocale.get("NOT_AVAILABLE")); 
       response.write(spanTitle.getToString())+response.write(request.getAttribute("spanTitle").getToString());response.write(UserAdminLogic.getOrgUnitName())+response.write(request.getAttribute("UserAdminLogic").getOrgUnitName());response.write(userAdminLocale.get("ORGUNIT"));


      response.write(user.orgUnitId)+response.write(request.getAttribute("user").orgUnitId);response.write(user.getOrgUnit())+response.write(request.getAttribute("user").getOrgUnit());
     response.write(UserAdminLogic.getOrgUnitName())+response.write(request.getAttribute("UserAdminLogic").getOrgUnitName());

     response.write(UserAdminLogic.getOrgUnitName())+response.write(request.getAttribute("UserAdminLogic").getOrgUnitName());
     response.write(util.getFilteringSpecialChar(orgUnitName));



    response.write(webpath)+response.write(request.getAttribute("webpath"));




  response.write(userAdminLocale.get("SELECT_ORGUNIT"));




     response.write(webpath)+response.write(request.getAttribute("webpath"));



      entryExit.delete(0, entryExit.length());
entryExit.append(userAdminMessages.print(new Message("END_GROUP_BOX", addInfo))); 
   response.write(webpath)+response.write(request.getAttribute("webpath"));


   response.write(addInfo);
   response.write(entryExit.getToString())+response.write(request.getAttribute("entryExit").getToString());
}

}
