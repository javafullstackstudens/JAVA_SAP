 package PackageNo1491797710;import _proxy_txt;import _contextspecific_includes_top_txt;import _contextspecific_includes_bottom_txt;import com.sap.security.core.role.*;import com.sap.security.core.role.imp.*;import com.sap.security.core.*;import com.sap.security.core.admin.role.*;import com.sap.security.api.*;import java.util.Iterator;import com.sap.security.core.util.*; public class role_management_main_jsp {  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();








   InfoBean info = new InfoBean();
    ErrorBean error = new ErrorBean();
     com.sap.security.core.admin.role.RoleAdminMessagesBean roleAdminMessages = (com.sap.security.core.admin.role.RoleAdminMessagesBean) proxy.getSessionAttribute("roleAdminMessages");
     com.sap.security.core.admin.role.RoleAdminLocaleBean roleAdminLocale = (com.sap.security.core.admin.role.RoleAdminLocaleBean) proxy.getSessionAttribute("roleAdminLocale");

     
     Iterator roles = (Iterator)HelperClass.getAttr(proxy,"list_roles");
     String searchFilter = (String)HelperClass.getAttr(proxy, "searchFilter");
     
     //String myUrl= RoleAdminServlet.alias+"?cmd=role-management-main";
     String passedUrl = "needed for company block - currently commented out"; //CompanySearchLogic.getSearchCompanyURL(proxy, myUrl, true);
     
     IRole role = null;
     String roleID = "";
     String displayRolename = "";
     String template = "";
     //template = (String)HelperClass.getAttr(proxy,"template");
     String ID = (String)HelperClass.getAttr(proxy,"ID");
     
     String type = (String)HelperClass.getAttr(proxy,"type");
     if("".equals(type)) type = "TRADING_PARTNER";
     String redirectURL= (String)HelperClass.getAttr(proxy,"redirectURL");
     String GROUP = "group";
     String USER = "user";
     String principal = (String)HelperClass.getAttr(proxy,"principal");
     
     

     if (!inPortal) {

 response.write(roleAdminLocale.get("MAIN_MENU"));
   response.write(webpath)+response.write(request.getAttribute("webpath"));
   response.write(webpath)+response.write(request.getAttribute("webpath"));




















   response.write(webpath)+response.write(request.getAttribute("webpath"));



   response.write(webpath)+response.write(request.getAttribute("webpath"));










     }

   response.write(RoleAdminServlet.getAlias())+response.write(request.getAttribute("RoleAdminServlet").getAlias());






       response.write(roleAdminLocale.get("MAIN_HEADER"));


     response.write(webpath)+response.write(request.getAttribute("webpath"));


   response.write(roleAdminLocale.get("ASSIGN_MAIN"));

     response.write(webpath)+response.write(request.getAttribute("webpath"));


      if ( info.isInfo() ) { 


response.write(webpath)+response.write(request.getAttribute("webpath"));response.write(roleAdminMessages.print(info.getMessage()))+response.write(request.getAttribute("roleAdminMessages").print(info.getMessage()));


      } 


      if ( error.isError() ) { 


response.write(webpath)+response.write(request.getAttribute("webpath"));      response.write(roleAdminMessages.print(error.getMessage()))+response.write(request.getAttribute("roleAdminMessages").print(error.getMessage()));


      } 





  response.write(webpath)+response.write(request.getAttribute("webpath"));

response.write(userAdminLocale.get("NEW_SEARCH"));
 response.write(searchFilter);
      response.write(webpath)+response.write(request.getAttribute("webpath"));response.write(userAdminLocale.get("SEARCH"));




response.write(webpath)+response.write(request.getAttribute("webpath"));

   response.write(roleAdminLocale.get("AVAILABLE_ROLES"));



      
     	if ((null == roles) || !(roles.hasNext())) { 
      response.write(RoleAdminServlet.getMAX_ROLE_NAME_LENGTH())+response.write(request.getAttribute("RoleAdminServlet").getMAX_ROLE_NAME_LENGTH());
       }
     	else { 
      response.write(RoleAdminServlet.getMAX_ROLE_NAME_LENGTH())+response.write(request.getAttribute("RoleAdminServlet").getMAX_ROLE_NAME_LENGTH());
      
     	   while (roles.hasNext())
     	   {
     		  role = (IRole) roles.next();
     		  if(null != role)
     		  {
     			 roleID = (String) role.getUniqueID();
     			 displayRolename = (String) role.getDisplayName();
     		  }
     	
  response.write(util.getURLEncoder(roleID));    response.write(displayRolename);
       }} 


 response.write(webpath)+response.write(request.getAttribute("webpath"));

if ( UserAdminHelper.hasAccess(performer, UserAdminHelper.ADD_ROLES) ) { 
      response.write(webpath)+response.write(request.getAttribute("webpath"));  response.write(roleAdminLocale.get("ADD_ROLE"));

}
     		   if ( UserAdminHelper.hasAccess(performer, UserAdminHelper.MODIFY_ROLES) ) { 
      response.write(webpath)+response.write(request.getAttribute("webpath"));   response.write(roleAdminLocale.get("MODIFY"));
   response.write(roleAdminLocale.get("ONLY_ONE_ROLE_NOTIFICATION"));response.write(roleAdminLocale.get("CHOOSE_ROLE_NOTIFICATION"));
}
     		   if ( UserAdminHelper.hasAccess(performer, UserAdminHelper.ASSIGN_ROLES) ) { 
      response.write(webpath)+response.write(request.getAttribute("webpath"));   response.write(roleAdminLocale.get("ASSIGNMENT_USERS"));
    response.write(roleAdminLocale.get("ATLEAST_ONE_ROLE_NOTIFICATION"));response.write(USER);
      response.write(webpath)+response.write(request.getAttribute("webpath"));  response.write(roleAdminLocale.get("ASSIGNMENT_GROUP"));
    response.write(roleAdminLocale.get("ATLEAST_ONE_ROLE_NOTIFICATION"));response.write(GROUP);
}
     		   if ( UserAdminHelper.hasAccess(performer, UserAdminHelper.DELETE_ROLES) ) { 
      response.write(webpath)+response.write(request.getAttribute("webpath"));response.write(roleAdminLocale.get("DELETE"));
response.write(roleAdminLocale.get("ROLE_CONFIRM_DELETION"));response.write(roleAdminLocale.get("ATLEAST_ONE_ROLE_NOTIFICATION"));
} 
       response.write(webpath)+response.write(request.getAttribute("webpath"));   response.write(userAdminLocale.get("DOWNLOAD_USERS_NOW"));
 response.write(roleAdminLocale.get("ATLEAST_ONE_ROLE_NOTIFICATION"));





   response.write(ID);
   response.write(type);


   response.write(principal);
}

}
